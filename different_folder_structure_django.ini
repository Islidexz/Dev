reconfigure folders     
rec paths
migrate
move panel

myproject/
│
├── config/                # Central configuration for the project
│   ├── __init__.py
│   ├── settings/          # Settings split into multiple files for modularity
│   │   ├── __init__.py
│   │   ├── base.py        # Base settings shared by all environments
│   │   ├── dev.py         # Development-specific settings
│   │   ├── prod.py        # Production-specific settings
│   │   └── ...
│   ├── urls.py            # The URL declarations for the whole project
│   └── wsgi.py            # WSGI config for the project
│
├── apps/                  # All Django apps are contained in this directory
│   ├── app1/              # A Django app
│   │   └── ...
│   ├── app2/              # Another Django app
│   │   └── ...
│   └── ...
│
├── static/                # Global static files (CSS, JavaScript, etc.)
│   └── ...
│
├── media/                 # User-uploaded content
│   └── ...
│
├── templates/             # Global templates
│   └── ...
│
├── scripts/               # Helper scripts, maintenance scripts
│   └── ...
│
├── tests/                 # Project-wide tests, not specific to any app
│   └── ...
│
├── lib/                   # Custom libraries or helper functions
│   └── ...
│
├── manage.py              # Django's command-line utility for administrative tasks
└── requirements/          # Requirements files for different environments
    ├── base.txt           # Base dependencies
    ├── dev.txt            # Development environment dependencies
    ├── prod.txt           # Production environment dependencies
    └── ...


# base.py
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
SECRET_KEY = 'your-secret-key'
INSTALLED_APPS = [
    # All your default installed apps
]
# ... other base settings

# dev.py
from .base import *

DEBUG = True
# ... other development-specific settings

# prod.py
from .base import *

DEBUG = False
# ... other production-specific settings

# urls.py
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    # Include app urls
    path('app1/', include('apps.app1.urls')),
    # ... other url includes
]

# wsgi.py
import os
from django.core.wsgi import get_wsgi_application

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings.prod')

application = get_wsgi_application()


static/
Global static files like CSS, JavaScript, and images.

css/
js/
images/
media/
User-uploaded content is served from here.

templates/
Global templates that can be used across different apps.

base.html: The base template.
404.html: Custom page not found template.
... other global templates.
scripts/
Utility scripts that help with tasks such as data migration, setup, etc.

initialize_project.sh: A shell script to set up the project.
... other scripts.
tests/
Project-wide tests that aren't specific to any app.

test_models.py
test_views.py
... other test files.
lib/
Custom utility functions and libraries.

helpers.py: Helper functions.
... other libraries.
requirements/
Dependency files for different environments.

base.txt: Base dependencies.


# manage.py
#!/usr/bin/env python
import os
import sys

if __name__ == '__main__':
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings.dev')
    try:
        from django.core.management import execute_from_command_line
    except ImportError as exc:
        raise ImportError(
            "Couldn't import Django. Are you sure it's installed and "
            "available on your PYTHONPATH environment variable? Did you "
            "forget to activate a virtual environment?"
        ) from exc
    execute_from_command_line(sys.argv)


requirements/:

Specify project dependencies for different environments.
Install dependencies using pip install -r requirements/dev.txt for development or the appropriate file for other environments.
manage.py:

Run administrative commands like runserver, makemigrations, migrate, createsuperuser, and more.
Manage your Django project from the command line.